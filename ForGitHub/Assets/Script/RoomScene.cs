// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using CodeBeautify;
//
//    var welcome2 = Welcome2.FromJson(jsonString);

namespace Kara.Model
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class RoomScene
    {
        [JsonProperty("rooms")]
        public Room[] Rooms { get; set; }

        [JsonProperty("room_spaces")]
        public long[][] RoomSpaces { get; set; }

        [JsonProperty("room_layouts")]
        public RoomLayout[] RoomLayouts { get; set; }
    }

    public partial class RoomLayout
    {
        [JsonProperty("x")]
        public long X { get; set; }

        [JsonProperty("y")]
        public long Y { get; set; }
    }

    public partial class Room
    {
        [JsonProperty("pos")]
        public long Pos { get; set; }

        [JsonProperty("build_id")]
        public long BuildId { get; set; }

        [JsonProperty("slave_id")]
        public long SlaveId { get; set; }

        [JsonProperty("anim_id")]
        public long AnimId { get; set; }
    }

    public partial class RoomScene
    {
        public static RoomScene FromJson(string json) => JsonConvert.DeserializeObject<RoomScene>(json, Kara.Model.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this RoomScene self) => JsonConvert.SerializeObject(self, Kara.Model.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
